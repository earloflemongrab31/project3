@charset "UTF-8";


/*
    container는 작은 화면의 외부 영역을 관리하는 도구
    - 폭 조절과 가운데 배치를 할 수 있어야 한다.
    - css에서는 계산식이 모든 브라우저에서 작동하지 않는다
    - 미리 예상 가능한 크기를 준비해두면 편하게 쓸 수 있지 않을까?
*/
.container-300 { width:300px; margin:0 auto; }
.container-350 { width:350px; margin:0 auto; }
.container-400 { width:400px; margin:0 auto; }
.container-450 { width:450px; margin:0 auto; }
.container-500 { width:500px; margin:0 auto; }
.container-550 { width:550px; margin:0 auto; }
.container-600 { width:600px; margin:0 auto; }
.container-650 { width:650px; margin:0 auto; }
.container-700 { width:700px; margin:0 auto; }
.container-750 { width:750px; margin:0 auto; }
.container-800 { width:800px; margin:0 auto; }
.container-850 { width:850px; margin:0 auto; }
.container-900 { width:900px; margin:0 auto; }
.container-950 { width:950px; margin:0 auto; }
.container-1000 { width:1000px; margin:0 auto; }
.container-1050 { width:1050px; margin:0 auto; }
.container-1100 { width:1100px; margin:0 auto; }
.container-1150 { width:1150px; margin:0 auto; }
.container-1200 { width:1200px; margin:0 auto; }

/*
    row는 container 내부에 배치될 도구들이 위치할 자리에 해당한다
    - 상하 margin만 부여하여 간격을 띄워준다
*/
.row {
    margin: 10px 0px;
}

/*
    row 내부에 위치하는 도구들의 폭을 설정
    - 폭을 row에 맞게 100%로 설정하거나 아니면 자신의 폭을 그대로 사용
    - 아무 표시도 하지 않으면 폭을 있는 그대로 두고 클래스를 부여하면 100%로 변경
*/
.w-100 {
    width:100%;
}

/*
    어짜피 정렬은 left, center, right밖에 없다
    - text-align 속성으로 설정
*/
.left {text-align: left;}
.center {text-align: center;}
.right {text-align: right;}

/*
    margin은 간격을 벌리기 위해서 사용한다
    어떨때는 12px, 어떨때는 17px과 같이 부여하면 일관성이 떨어진다
    표준화된 margin 부여가 가능하도록 스타일을 설정
    - mt(margin-top), mb(margin-bottom), ms(margin-start), me(margin-end)
*/
.mt-10 { margin-top: 10px;}
.mt-20 { margin-top: 20px;}
.mt-30 { margin-top: 30px;}
.mt-40 { margin-top: 40px;}
.mt-50 { margin-top: 50px;}

.mb-10 { margin-bottom: 10px;}
.mb-20 { margin-bottom: 20px;}
.mb-30 { margin-bottom: 30px;}
.mb-40 { margin-bottom: 40px;}
.mb-50 { margin-bottom: 50px;}

.ms-10 { margin-left: 10px;}
.ms-20 { margin-left: 20px;}
.ms-30 { margin-left: 30px;}
.ms-40 { margin-left: 40px;}
.ms-50 { margin-left: 50px;}

.me-10 { margin-right: 10px;}
.me-20 { margin-right: 20px;}
.me-30 { margin-right: 30px;}
.me-40 { margin-right: 40px;}
.me-50 { margin-right: 50px;}

/*
    버튼은 3가지 역할이 있다고 보고 디자인한다
    - 긍정버튼 : 현재의 작업을 완성시키는 버튼
    - 중립버튼 : 현재의 작업과 상관없는 다른 작업과 연결된 버튼
    - 부정버튼 : 현재의 작업이 위험함을 알리거나 부정적인 효과를 처리하는 버튼
*/
.btn {
    border: none;
    font-size: 20px;
    padding: 0.75em;/*글자 크기의 0.75배*/
    cursor: pointer;
    /* a 태그를 버튼으로 만들기 위해 추가 */
    display: inline-block;
    text-align: center;
    text-decoration: none;
}
.btn.btn-positive {
    background-color: #0984e3;
    color: white;
}
.btn.btn-positive:hover {
    background-color: #0876cc;
}
.btn.btn-neutral {
    border: 1px solid gray;
    background-color: white;
    color: gray;
}
.btn.btn-neutral:hover {
    border: 1px solid black;
    color: black;
}
.btn.btn-negative {
    background-color: #d63031;
    color: white;
}
.btn.btn-negative:hover {
    background-color: #c42627;
}

/*
    입력창은 버튼과 같이 등장하므로 비율이나 크기등이 같아야 한다
*/
.input {
    font-size: 20px;
    padding: 0.75em;
    outline: none;
    border:1px solid gray;
}
.input:focus {
    border-color: black;
}
/* input이라는 클래스가 있으면서 input-underline 클래스가 있다면 */
.input.input-underline {
    border: none;
    border-bottom: 1px solid gray;
}
.input.input-underline:focus {
    border-color: black;
}

/* 배경이미지가 들어가는 입력창 */
.input.input-icon {
    padding-left: 2.5em;
    /* background-image: url("./image/search-icon.png"); */
    background-size: 1em;
    background-repeat: no-repeat;
    background-position-x: 0.75em;
    background-position-y: center;
}

/*
    textarea는 기본적으로 폭 조절이 가능하여 디자인에 어려움이 많다
    - 높이만 조절되게 하던가
    - 아예 조절이 안되게 하던가
    - resize 속성
*/
textarea.input {
    resize: vertical;
}
textarea.input.fix-size {
    resize: none;
}

/* 
테이블 디자인
- 테이블은 기본 디자인이 너무 많아서 디자인하기 까다로운 태그 중 하나
*/
.table{
    /* border: 1px solid black; */
    border-collapse: collapse; /* 테두리 병합 */
    width: 100%;
    font-size: 16px;
}

/* 
방법 1: .table 안에 있는 모든 th, td를 선택(후손선택자) (띄어쓰기 확인)
- 내부에 있는 모든 요소를 선택하므로 테이블이 중첩이 되는 경우 문제가 발생
 */
.table th,
.table td{
    /* border: 1px solid black; */
}


/* 방법 2: .table 부터 시작하는 모든 경로를 제시하여 th와 td를 선택(자식선택자) */
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td{
    /* border: 1px solid black; */
    padding: 0.5em;
}


/* 확장스타일 : 테두리가 있는 테이블 */
.table.table-border{
    border: 1px solid gray;
}
.table.table-border > thead > tr > th,
.table.table-border > thead > tr > td,
.table.table-border > tbody > tr > th,
.table.table-border > tbody > tr > td,
.table.table-border > tfoot > tr > th,
.table.table-border > tfoot > tr > td{
    border: 1px solid gray;
}


/* 확장스타일 : 줄무늬 테이블 */
.table.table-stripe > thead > tr,
.table.table-stripe > tbody > tr:nth-child(2n){
    background-color: #dfe6e9;
}


/* 확장스타일 : 마우스에 반응하는 테이블 */
.table.table-hover > thead > tr:hover,
.table.table-hover > tbody > tr:hover,
.table.table-hover > tfoot > tr:hover{
    background-color: #dfe6e9;
}


  /* 확장스타일 : 옆 트임 테이블 */
  .table.table-slit{
    border: 3px solid gray;
    /* border-left-color: transparent; */
    /* border-right-color: rgba(0, 0, 0, 0); */
    border-left: none;
    border-right: none;
}

.table.table-slit > thead {
    border-bottom: 2px solid gray;
}
.table.table-slit > tfoot {
    border-bottom: 2px solid gray;
}


 /* 확장스타일 : 바둑판 모양 테이블 */
 .table.table-chess > tbody > tr:nth-child(2n) > :nth-child(2n),
 .table.table-chess > tbody > tr:nth-child(2n-1) > :nth-child(2n-1){
    background-color: #dfe6e9;
}


/* 
 이미지 디자인

*/
.image{
    border: 1px solid transparent;
}

.image.image-hover:hover,
.image.image-frame{
   border: 2px solid black;
}

.image.image-blur{
    /* opacity 는 불투명도이며 0부터1까지 설정가능하다 */
   opacity: 0.5;
}
.image.image-blur:hover{
    /* opacity 는 불투명도이며 0부터1까지 설정가능하다 */
   opacity: 1;
}

.image.image-shadow{
/* 
box-shadow 속성
- box-shadow : 우측 위치, 하단 위치, 번짐정도, 확장정도, 그림자색깔
*/
/* box-shadow: 5px 5px 0px 0px black; */
 box-shadow: 0px 0px 5px 0px black;
/* box-shadow: 0px 0px 0px 20px black; */
}

.image.image-round{
border-radius: 10px;
}

.image.image-clrcle{
    border-radius: 50%;
}

.image.image-leaf{
border-top-left-radius: 50%;
border-bottom-right-radius: 50%;
}

/* 
Pagination 디자인
- ul 혹은 ol을 개조하여 구조를 설계
*/

ul.pagination{
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 16px;
    text-align: center;
    }
    
    ul.pagination>li{
        display: inline-block;
        border: 1px solid transparent;
        padding: 0.5em;
        line-height: 1em; /* 글자 표시 높이 설정*/
        min-width: 2em;
        text-align: center;
        cursor: pointer;
    }
    
    ul.pagination>li.on,
    ul.pagination>li:hover{
        border-color: #d63031;
        color: #d63031;
    
    }
    
    /* 확장스타일 : 글자 크기를 다르게 하여 다양한  크기 옵션을 제공 */
    ul.pagination.pagination-big{
        font-size: 1.25em;
    }
    ul.pagination.pagination-small{
        font-size: 0.75em;
    }

    ul.pagination>li>a{
        display: block;
        width: 100%;
        color: inherit;
        text-decoration: none;
    }

    .fullscreen{
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
       
        /*
        background-color: black;
        opacity: 0.5;
        */
        background-color:rgba(0, 0, 0, 0.5);
    
    }
    
    .screen-center{
          /* 중앙에 배치 */
        position: absolute;
        top:50%;
        left:50%;
        transform: translate(-50%,-50%);
    }

/* 
드롭다운(drop down) 메뉴 만들기
- HTML의 구조는 ul로 구현한다

1) 1차 메뉴와 2차 메뉴, 모든 메뉴에 대한 선택자가 다르다
- 1차 메뉴 : .dropdown-menu>li
- 2차 메뉴 : .dropdown-menu>li>ul>li
- 3차 메뉴 : .dropdown-menu>li>ul>li>ui>li
- 모든메뉴 : .dropdown-menu li
- 2차 이상 메뉴 : .dropdown-menu ul>li

2) 모든 메뉴 태그의 여백과 표시방식을 변경

3) 1차 메뉴 표시방식(display)을 inline-block 으로 변경

4) 1차 메뉴가 기준점이 될 수 있도록 position을 설정 후
   2차 메뉴 이상의 위치 결정 방식(position)을 absolute로 변경

5) 1차 메뉴를 제외한 나머지 메뉴를 숨김

6) li 태그에 마우스가 올라가면(hover) 바로 아래에 있는 ul을 표시

7) 메뉴 항목(li) 에 여백 설정 및 폭 맞춤

8) 메뉴에 마우스가 올라가면 강조 효과를 부여
*/

/* (2) */
.dropdown-menu, 
.dropdown-menu ul{
margin: 0;
padding: 0;
list-style: none;
}

/* (3) */
.dropdown-menu>li{
    display: inline-block;
    width: 100px;
}

/* (4) */
.dropdown-menu>li {
    position: relative;
}
.dropdown-menu ul{
position: absolute;
top: 100%;
left: 0;
}

/* (5) */
.dropdown-menu ul{
    display: none;
}

/* (6) */
.dropdown-menu li:hover>ul{
    display: block;
}

/* (7) */
.dropdown-menu{
    font-size: 20px;
}
.dropdown-menu li{
    padding: 0.5em;
}
.dropdown-menu a{
    display: block;
    width: 100%;
    text-decoration: none;
    color: black;
    text-align: center;
}
.dropdown-menu ul{
    width: 100%;
    background-color: rgb(192, 202, 212);
}

/* (8) */
.dropdown-menu li:hover{
background-color: black;
}
.dropdown-menu li:hover>a{
color: rgb(219, 214, 214);
}


.dropdown-menu{
    background-color: rgb(192, 202, 212);
}



      /* 
float 설정
- float 를 설정하면 현재 영역에서 left 혹은 right 방향에 붙는다(cf:자석)
- 문제점 : float와 float 가 아닌 요소들을 섞어서 배치할 때 문제가 발생
           float가 float가 아닌 영역에 포함되지 않는다
- 해결책 : float를 제거하는 속성인 clear를 float가 끝나는 시점에 사용한다
           clear 의 등장 이후부터는 float의 영향을 받지않는다
- 최종형태 : float는 필요하고 다른요소랑 어울리긴 힘드니 별도의 영역을 준비
             해당영역(.float-container) 종료시 자동으로 clear 되도록 처리
             가상 선택자(virtual selector)가 필요하다
*/ 
.float-container{}
.float-container::after{
    content: "";
    display: block;
    clear: both;
}

.float-left{
    float:left;
}
.float-right{
    float:right;
}

.w-50{
    width: 50%;
}
.w-33{
    width: 33.3333%;
}
.w-25{
    width: 25%;
}
.w-20{
    width: 20%;
}